Index: Methode_rectangle.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import timeit\r\n\r\ndef f(x: float, p1: float, p2: float, p3: float, p4: float):\r\n    \"\"\"Fonction polynomiale du troisième degré.\"\"\"\r\n    return p1 + p2 * x + p3 * x ** 2 + p4 * x ** 3\r\n\r\ndef integral_analytique(a: float, b: float, p1: float, p2: float, p3: float, p4: float):\r\n    \"\"\"Intégrale analytique de f(x) entre a et b\"\"\"\r\n    term1 = p1 * (b - a)\r\n    term2 = p2 * (b ** 2 - a ** 2) / 2\r\n    term3 = p3 * (b ** 3 - a ** 3) / 3\r\n    term4 = p4 * (b ** 4 - a ** 4) / 4\r\n    return term1 + term2 + term3 + term4\r\n\r\ndef integral_rectangle(a: float, b: float, p1: float, p2: float, p3: float, p4: float, n: int = 10):\r\n    \"\"\"Intégration numérique par la méthode des rectangles sur n segments.\"\"\"\r\n    h = (b - a) / n  # largeur d'un segment\r\n    total = 0\r\n    x = a\r\n    for _ in range(n):\r\n        total += f(x, p1, p2, p3, p4) * h\r\n        x += h\r\n    return total\r\n\r\ndef erreur_integration(a: float, b: float, p1: float, p2: float, p3: float, p4: float, n: int = 10):\r\n    \"\"\"Erreur absolue entre l'intégrale analytique et numérique.\"\"\"\r\n    exact = integral_analytique(a, b, p1, p2, p3, p4)\r\n    approx = integral_rectangle(a, b, p1, p2, p3, p4, n)\r\n    return abs(exact - approx)\r\n\r\ndef tester_convergence(a: float, b: float, p1: float, p2: float, p3: float, p4: float):\r\n    \"\"\"Affiche l'erreur pour des valeurs croissantes de n.\"\"\"\r\n    print(\"\\nTest de convergence :\")\r\n    for n in [10, 100, 1000, 10000, 100000]:\r\n        err = erreur_integration(a, b, p1, p2, p3, p4, n)\r\n        print(f\"n={n:<7} erreur={err:.10f}\")\r\n\r\ndef mesurer_temps_execution(a, b, p1, p2, p3, p4, n):\r\n    \"\"\"Mesure le temps d'exécution de l'intégration numérique.\"\"\"\r\n    temps = timeit.timeit(lambda: integral_rectangle(a, b, p1, p2, p3, p4, n), number=1)\r\n    print(f\"\\nTemps d'exécution pour n={n} : {temps:.6f} secondes\")\r\n\r\n\r\n# valeur fixe pour le coefficient du polynome et limites d'intégration\r\np1, p2, p3, p4 = 26, 36, 12, 7  # coefficients du polynôme\r\na, b = -50, 50  # bornes de l'intégrale\r\nn = 10  # nombre de segments pour la méthode des rectangles\r\n\r\nexacte = integral_analytique(a, b, p1, p2, p3, p4)\r\napprox = integral_rectangle(a, b, p1, p2, p3, p4, n)\r\nerr = abs(exacte - approx)\r\n\r\nprint(f\"Intégrale analytique   : {exacte}\")\r\nprint(f\"Intégrale numérique    : {approx}\")\r\nprint(f\"Erreur absolue (n={n}): {err}\")\r\n\r\ntester_convergence(a, b, p1, p2, p3, p4)\r\nmesurer_temps_execution(a, b, p1, p2, p3, p4, n)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Methode_rectangle.py b/Methode_rectangle.py
--- a/Methode_rectangle.py	(revision 2b1f23d7129409b42440013bf034d0efc916d0ed)
+++ b/Methode_rectangle.py	(date 1749163263302)
@@ -10,7 +10,7 @@
     term2 = p2 * (b ** 2 - a ** 2) / 2
     term3 = p3 * (b ** 3 - a ** 3) / 3
     term4 = p4 * (b ** 4 - a ** 4) / 4
-    return term1 + term2 + term3 + term4
+    return term1 + term2 + term3 += term4
 
 def integral_rectangle(a: float, b: float, p1: float, p2: float, p3: float, p4: float, n: int = 10):
     """Intégration numérique par la méthode des rectangles sur n segments."""
